// @see https://hackernoon.com/android-how-to-add-gradle-dependencies-using-foreach-c4cbcc070458

ext.app = [
        minSdk    : 21,
        targetSdk : 28,
        compileSdk: 28,
        buildTools: '28.0.3',
]

ext.repository = [
        jitpack: 'https://jitpack.io',
        fabric : 'https://maven.fabric.io/public',
]

ext.addRepos = { RepositoryHandler handler ->
    handler.google()
    handler.jcenter()
    handler.maven { url repository.jitpack }
    handler.maven { url repository.fabric }
}

ext.java = [
        sourceCompatibility: JavaVersion.VERSION_1_8,
        targetCompatibility: JavaVersion.VERSION_1_8,
]

def versions = [
        googleServicesPlugin: '4.2.0',
        gradlePlugin        : '3.2.1',
        multidex            : '2.0.0',
        kotlin              : '1.3.10',
        supportLibrary      : '1.0.0',
        supportLibraryRC01  : '1.0.0-rc01',
        constraintLayout    : '1.1.2',
        room                : '2.0.0',
        lifecycle           : '2.0.0',
        dagger              : '2.16',
        javaxInject         : '1',
        timber              : '4.5.1',
        firebase            : '16.0.7',
        firebaseUI          : '4.2.1',
        fireStore           : '17.1.5',
        ahBottomNavigation  : '2.3.3',
        fabricGradle        : '1.26.1',
        fabric              : '2.9.9'
]

def pluginLibs = [
        //Google Services Gradle Plugin
        google : "com.google.gms:google-services:$versions.googleServicesPlugin",
        // Android Gradle Plugin
        android: "com.android.tools.build:gradle:$versions.gradlePlugin",
        // Kotlin Gradle Plugin
        kotlin : "org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlin",
        //Fabric Plugin
        fabric : "io.fabric.tools:gradle:$versions.fabricGradle"
]

ext.gradlePlugins = [
        android: pluginLibs.android,
        kotlin : pluginLibs.kotlin,
        google : pluginLibs.google,
        fabric : pluginLibs.fabric
]

def libraries = [
        // Multidex Support
        multidex           : "androidx.multidex:multidex:$versions.multidex",

        // Kotlin
        kotlin             : "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$versions.kotlin",
        kotlinReflect      : "org.jetbrains.kotlin:kotlin-reflect:$versions.kotlin",

        // Support Libraries
        appCompatV7        : "androidx.appcompat:appcompat:$versions.supportLibrary",
        cardView           : "androidx.cardview:cardview:$versions.supportLibrary",
        recylerView        : "androidx.recyclerview:recyclerview:$versions.supportLibrary",
        supportV4          : "androidx.legacy:legacy-support-v4:$versions.supportLibrary",
        viewPager          : "androidx.viewpager:viewpager:$versions.supportLibrary",

        supportDesign      : "com.google.android.material:material:$versions.supportLibraryRC01",

        constraintLayout   : "androidx.constraintlayout:constraintlayout:$versions.constraintLayout",

        // Room
        roomRuntime        : "androidx.room:room-runtime:$versions.room",
        roomCompiler       : "androidx.room:room-compiler:$versions.room",

        // LifeCycle
        lifecycleCommon    : "androidx.lifecycle:lifecycle-common:$versions.lifecycle",
        lifecycleRuntime   : "androidx.lifecycle:lifecycle-runtime:$versions.lifecycle",
        lifeCycleExtensions: "androidx.lifecycle:lifecycle-extensions:$versions.lifecycle",
        lifeCycleCompiler  : "androidx.lifecycle:lifecycle-compiler:$versions.lifecycle",

        // Dagger
        dagger             : "com.google.dagger:dagger:$versions.dagger",
        daggerAndroid      : "com.google.dagger:dagger-android:$versions.dagger",
        daggerSupport      : "com.google.dagger:dagger-android-support:$versions.dagger",
        daggerCompiler     : "com.google.dagger:dagger-compiler:$versions.dagger",
        daggerProcessor    : "com.google.dagger:dagger-android-processor:$versions.dagger",

        javaxInject        : "javax.inject:javax.inject:$versions.javaxInject",

        //Timber
        timber             : "com.jakewharton.timber:timber:$versions.timber",

        //Firebase
        firebaseCore       : "com.google.firebase:firebase-core:$versions.firebase",
        fireStore          : "com.google.firebase:firebase-firestore:$versions.fireStore",

        //FirebaseUI
        firebaseAuth       : "com.firebaseui:firebase-ui-auth:$versions.firebaseUI",

        //BottomNavigation
        ahBottomNavigation : "com.aurelhubert:ahbottomnavigation:$versions.ahBottomNavigation",

        //Fabric
        fabric             : "com.crashlytics.sdk.android:crashlytics:${versions.fabric}@aar"

]
ext.appDependencies = [
        addDependency('implementation', libraries.multidex),

        addDependency('implementation', libraries.kotlin),
        addDependency('implementation', libraries.kotlinReflect),

        addDependency('implementation', libraries.appCompatV7),
        addDependency('implementation', libraries.supportDesign),
        addDependency('implementation', libraries.recylerView),
        addDependency('implementation', libraries.supportV4),
        addDependency('implementation', libraries.cardView),
        addDependency('implementation', libraries.constraintLayout),
        addDependency('implementation', libraries.viewPager),

        addDependency('implementation', libraries.roomRuntime),
        addDependency('kapt', libraries.roomCompiler),

        addDependency('implementation', libraries.lifecycleRuntime),
        addDependency('implementation', libraries.lifeCycleExtensions),
        addDependency('kapt', libraries.lifeCycleCompiler),

        addDependency('implementation', libraries.dagger),
        addDependency('implementation', libraries.daggerAndroid),
        addDependency('implementation', libraries.daggerSupport),
        addDependency('kapt', libraries.daggerCompiler),
        addDependency('kapt', libraries.daggerProcessor),

        addDependency('implementation', libraries.timber),

        addDependency('implementation', libraries.firebaseCore),
        addDependency('implementation', libraries.fireStore),
        addDependency('implementation', libraries.firebaseAuth),

        addDependency('implementation', libraries.ahBottomNavigation),
        addDependency('implementation', libraries.fabric, { transitive = true }),

        //TODO: kullanÄ±lmazsa silinecek
        addDependency('implementation', libraries.javaxInject),

        //test debug for room
        addDependency('debugImplementation', 'com.amitshekhar.android:debug-db:1.0.4')
]

static def addDependency(config, dependency) {
    [configuration: config, dependency: dependency]
}

static def addDependency(config, dependency, options) {
    [configuration: config, dependency: dependency, options: options]
}

ext.addDependencies = { DependencyHandler handler, dependencies ->
    dependencies.each {
        if (it.options != null) {
            handler.add(it.configuration, it.dependency, it.options)
        } else {
            handler.add(it.configuration, it.dependency)
        }

    }
}
